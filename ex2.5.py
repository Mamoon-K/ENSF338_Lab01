import json
import timeit

# Original ex2.3 generated by ChatGPT. Additional ex2.5 content done by Ayden.
def update_size(data, new_value):
    """
    Recursively updates all occurrences of the 'size' key in a JSON-like structure.
    """
    if isinstance(data, dict):  # If data is a dictionary, check keys
        return {k: (update_size(v, new_value) if k != 'size' else new_value) for k, v in data.items()}
    elif isinstance(data, list):  # If data is a list, check each element
        return [update_size(item, new_value) for item in data]
    else:
        return data  # If not a dict or list, return as is

# Load the JSON file
with open('large-file.json', 'r', encoding='utf8') as file:
    data = json.load(file)

# Update all occurrences of 'size'
time_to_update_sizes = timeit.timeit(lambda: update_size(data, 42), number=10)
print("Average time to update sizes in file:", time_to_update_sizes / 10)